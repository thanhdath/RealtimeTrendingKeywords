version: '3.6'
# Deploys MongoDB with customization scripts and container with Mongo client
# https://fabianlee.org/2018/05/20/docker-using-docker-compose-to-link-a-mongodb-server-and-client/
#
# usage:
# sudo docker-compose build
# sudo docker-compose up


services:
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      # seeding scripts
#      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      # named volumes
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    networks:
      - mongo_net
  selenium:
    image: selenium/standalone-chrome:94.0
    container_name: selenium
    shm_size: 2gb
    ports:
      - 4444:4444
      - 7900:7900
    networks:
      - mongo_net
  crawler:
    build: crawler/
    container_name: crawler
    volumes:
    - ./crawler:/code
    command: python crawl_vnexpress.py
    networks:
      - mongo_net
  zookeeper:
    image: zookeeper:3.7
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
    networks:
      - mongo_net
  kafka:
    image: confluentinc/cp-kafka:6.2.1
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - mongo_net

#  my-mongoclient:
#    # build will get tagged with 'image'
#    build: ./my-mongoclient
#    image: fabianlee/my-mongoclient:3.9
#    container_name: my-mongoclient
#    environment:
#      - MONGO_SERVER=my-mongodb
#      - MONGO_INITDB_DATABASE=test
#      - MONGO_INITDB_ROOT_USERNAME=admin
#      - MONGO_INITDB_ROOT_PASSWORD=admin
#    networks:
#      - mongo_net
#    depends_on:
#      - mongodb

volumes:
  # default dir on Ubuntu: /var/lib/docker/volumes
  mongodb:
  mongoconfig:

networks:
  mongo_net:
    driver: bridge

# https://github.com/rmoff/kafka-listeners/blob/master/docker-compose.yml